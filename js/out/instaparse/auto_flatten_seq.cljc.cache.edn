{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{EMPTY}, :name instaparse.auto-flatten-seq, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {FlattenOnDemandVector {:num-fields 4, :protocols #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IKVReduce cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted instaparse.auto-flatten-seq/GetVec cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack instaparse.auto-flatten-seq/Object cljs.core/IComparable cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :name instaparse.auto-flatten-seq/FlattenOnDemandVector, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 31, :type true, :column 10, :line 422, :record false, :end-line 422, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IKVReduce cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}}, AutoFlattenSeq {:num-fields 6, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext instaparse.auto-flatten-seq/ConjFlat cljs.core/ISeqable cljs.core/IMeta instaparse.auto-flatten-seq/Object cljs.core/ISequential cljs.core/IWithMeta cljs.core/ILookup}, :name instaparse.auto-flatten-seq/AutoFlattenSeq, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 24, :type true, :column 10, :line 167, :record false, :end-line 167, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta cljs.core/ILookup}}, GetVec {:meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 310, :column 14, :end-line 310, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {get-vec [[self]]}}}, :protocol-symbol true, :name instaparse.auto-flatten-seq/GetVec, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 20, :column 1, :line 310, :protocol-info {:methods {get-vec [[self]]}}, :info nil, :end-line 310, :tag any, :impls #{instaparse.auto-flatten-seq/FlattenOnDemandVector}, :doc nil, :jsdoc ("@interface")}, delve {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 57, :column 7, :end-line 57, :end-column 12, :arglists (quote ([v index]))}, :name instaparse.auto-flatten-seq/delve, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 12, :method-params ([v index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v index]))}, flat-seq {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 76, :column 7, :end-line 76, :end-column 15, :arglists (quote ([v] [v index])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([v] [v index]), :arglists ([v] [v index]), :arglists-meta (nil nil)}}, :name instaparse.auto-flatten-seq/flat-seq, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([v] [v index]), :arglists ([v] [v index]), :arglists-meta (nil nil)}, :method-params ([v] [v index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists ([v] [v index])}, advance {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 64, :column 7, :end-line 64, :end-column 14, :arglists (quote ([v index]))}, :name instaparse.auto-flatten-seq/advance, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 14, :method-params ([v index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v index]))}, expt {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 47, :column 11, :end-line 47, :end-column 15, :private true, :arglists (quote ([base pow]))}, :private true, :name instaparse.auto-flatten-seq/expt, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 15, :method-params ([base pow]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([base pow]))}, flat-vec {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 305, :column 7, :end-line 305, :end-column 15, :arglists (quote ([v])), :doc "Turns deep vector (like the vector inside of FlattenOnDemandVector) into a flat vec"}, :name instaparse.auto-flatten-seq/flat-vec, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Turns deep vector (like the vector inside of FlattenOnDemandVector) into a flat vec"}, flat-vec-helper {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 297, :column 7, :end-line 297, :end-column 22, :arglists (quote ([acc v]))}, :name instaparse.auto-flatten-seq/flat-vec-helper, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 22, :method-params ([acc v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 2, :fn-var true, :arglists (quote ([acc v]))}, hash-conj {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 29, :column 18, :end-line 29, :end-column 27, :tag number, :arglists (quote ([unmixed-hash item])), :doc "Returns the hash code, consistent with =, for an external ordered\n  collection implementing Iterable.\n  See http://clojure.org/data_structures#hash for full algorithms."}, :name instaparse.auto-flatten-seq/hash-conj, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 27, :method-params ([unmixed-hash item]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 29, :ret-tag number, :end-line 29, :max-fixed-arity 2, :tag number, :fn-var true, :arglists (quote ([unmixed-hash item])), :doc "Returns the hash code, consistent with =, for an external ordered\n  collection implementing Iterable.\n  See http://clojure.org/data_structures#hash for full algorithms."}, hash-ordered-coll-without-mix {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 260, :column 18, :end-line 260, :end-column 47, :tag number, :arglists (quote ([coll] [existing-unmixed-hash coll])), :doc "Returns the partially calculated hash code, still requires a call to mix-collection-hash", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [existing-unmixed-hash coll]), :arglists ([coll] [existing-unmixed-hash coll]), :arglists-meta (nil nil)}}, :name instaparse.auto-flatten-seq/hash-ordered-coll-without-mix, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 47, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [existing-unmixed-hash coll]), :arglists ([coll] [existing-unmixed-hash coll]), :arglists-meta (nil nil)}, :method-params ([coll] [existing-unmixed-hash coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 260, :ret-tag number, :end-line 260, :max-fixed-arity 2, :tag number, :fn-var true, :arglists ([coll] [existing-unmixed-hash coll]), :doc "Returns the partially calculated hash code, still requires a call to mix-collection-hash"}, true-count {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 290, :column 7, :end-line 290, :end-column 17, :arglists (quote ([v]))}, :name instaparse.auto-flatten-seq/true-count, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 17, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, convert-afs-to-vec {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 510, :column 7, :end-line 510, :end-column 25, :arglists (quote ([afs]))}, :name instaparse.auto-flatten-seq/convert-afs-to-vec, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 25, :method-params ([afs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 1, :fn-var true, :arglists (quote ([afs]))}, hash-cat {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 240, :column 11, :end-line 240, :end-column 19, :private true, :arglists (quote ([v1 v2]))}, :private true, :name instaparse.auto-flatten-seq/hash-cat, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 19, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 240, :end-line 240, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, auto-flatten-seq {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 278, :column 7, :end-line 278, :end-column 23, :arglists (quote ([v]))}, :name instaparse.auto-flatten-seq/auto-flatten-seq, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 23, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, afs? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 287, :column 7, :end-line 287, :end-column 11, :arglists (quote ([s]))}, :name instaparse.auto-flatten-seq/afs?, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 11, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, threshold {:meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 5, :column 14, :end-line 5, :end-column 23, :const true}, :name instaparse.auto-flatten-seq/threshold, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 23, :const-expr {:op :constant, :env {:context :expr}, :form 32, :tag number}, :column 1, :const true, :line 5, :end-line 5, :tag number}, ->FlattenOnDemandVector {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 422, :column 10, :end-line 422, :end-column 31, :protocols #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IKVReduce cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted instaparse.auto-flatten-seq/GetVec cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack instaparse.auto-flatten-seq/Object cljs.core/IComparable cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IKVReduce cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :factory :positional, :arglists (quote ([v hashcode cnt flat]))}, :protocols #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IKVReduce cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted instaparse.auto-flatten-seq/GetVec cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack instaparse.auto-flatten-seq/Object cljs.core/IComparable cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :name instaparse.auto-flatten-seq/->FlattenOnDemandVector, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 31, :method-params ([v hashcode cnt flat]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 422, :end-line 422, :max-fixed-arity 4, :fn-var true, :arglists (quote ([v hashcode cnt flat])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IKVReduce cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}}, conj-flat {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 8, :column 4, :end-line 8, :end-column 13, :protocol instaparse.auto-flatten-seq/ConjFlat, :doc nil, :arglists (quote ([self obj]))}, :protocol instaparse.auto-flatten-seq/ConjFlat, :name instaparse.auto-flatten-seq/conj-flat, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 13, :method-params ([self obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([self obj])), :doc nil}, get-vec {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 311, :column 22, :end-line 311, :end-column 29, :tag PersistentVector, :protocol instaparse.auto-flatten-seq/GetVec, :doc nil, :arglists (quote ([self]))}, :protocol instaparse.auto-flatten-seq/GetVec, :name instaparse.auto-flatten-seq/get-vec, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 29, :method-params ([self]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :ret-tag PersistentVector, :end-line 311, :max-fixed-arity 1, :tag PersistentVector, :fn-var true, :arglists (quote ([self])), :doc nil}, ->AutoFlattenSeq {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 167, :column 10, :end-line 167, :end-column 24, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext instaparse.auto-flatten-seq/ConjFlat cljs.core/ISeqable cljs.core/IMeta instaparse.auto-flatten-seq/Object cljs.core/ISequential cljs.core/IWithMeta cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta cljs.core/ILookup}, :factory :positional, :arglists (quote ([v premix-hashcode hashcode cnt dirty cached-seq]))}, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext instaparse.auto-flatten-seq/ConjFlat cljs.core/ISeqable cljs.core/IMeta instaparse.auto-flatten-seq/Object cljs.core/ISequential cljs.core/IWithMeta cljs.core/ILookup}, :name instaparse.auto-flatten-seq/->AutoFlattenSeq, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 24, :method-params ([v premix-hashcode hashcode cnt dirty cached-seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 167, :end-line 167, :max-fixed-arity 6, :fn-var true, :arglists (quote ([v premix-hashcode hashcode cnt dirty cached-seq])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta cljs.core/ILookup}}, EMPTY {:name instaparse.auto-flatten-seq/EMPTY, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :line 285, :column 1, :end-line 285, :end-column 11, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 285, :column 6, :end-line 285, :end-column 11}, :tag any}, ConjFlat {:meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 7, :column 14, :end-line 7, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {conj-flat [[self obj]], cached? [[self]]}}}, :protocol-symbol true, :name instaparse.auto-flatten-seq/ConjFlat, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 22, :column 1, :line 7, :protocol-info {:methods {conj-flat [[self obj]], cached? [[self]]}}, :info nil, :end-line 7, :tag any, :impls #{instaparse.auto-flatten-seq/AutoFlattenSeq}, :doc nil, :jsdoc ("@interface")}, cached? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/instaparse/auto_flatten_seq.cljc", :line 9, :column 4, :end-line 9, :end-column 11, :protocol instaparse.auto-flatten-seq/ConjFlat, :doc nil, :arglists (quote ([self]))}, :protocol instaparse.auto-flatten-seq/ConjFlat, :name instaparse.auto-flatten-seq/cached?, :variadic false, :file "public/js/out/instaparse/auto_flatten_seq.cljc", :end-column 11, :method-params ([self]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([self])), :doc nil}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{boolean premix-hashcode :else dirty v number cached-seq :unsynchronized-mutable PersistentVector ISeq cnt :tag flat hashcode}, :order [:else v :tag PersistentVector premix-hashcode number hashcode cnt dirty boolean cached-seq :unsynchronized-mutable ISeq flat]}, :doc nil}