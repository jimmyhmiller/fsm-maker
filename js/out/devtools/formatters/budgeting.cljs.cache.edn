{:rename-macros {}, :renames {}, :externs {WeakSet {}, Error {}}, :use-macros {oset devtools.oops, oget devtools.oops, ocall devtools.oops}, :excludes #{}, :name devtools.formatters.budgeting, :imports nil, :requires {devtools.formatters.templating devtools.formatters.templating, devtools.formatters.state devtools.formatters.state, devtools.formatters.helpers devtools.formatters.helpers, devtools.formatters.markup devtools.formatters.markup}, :cljs.spec/speced-vars [], :uses {pref devtools.formatters.helpers, render-markup devtools.formatters.templating, get-depth-budget devtools.formatters.state, <header-expander> devtools.formatters.markup, set-depth-budget devtools.formatters.state}, :defs {transfer-remaining-depth-budget! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 53, :column 7, :end-line 53, :end-column 39, :arglists (quote ([object-reference depth-budget]))}, :name devtools.formatters.budgeting/transfer-remaining-depth-budget!, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 39, :method-params ([object-reference depth-budget]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([object-reference depth-budget]))}, was-over-budget?! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 72, :column 7, :end-line 72, :end-column 24, :arglists (quote ([value]))}, :name devtools.formatters.budgeting/was-over-budget?!, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 24, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, determine-depth {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 42, :column 7, :end-line 42, :end-column 22, :arglists (quote ([json-ml]))}, :name devtools.formatters.budgeting/determine-depth, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 22, :method-params ([json-ml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([json-ml]))}, add-over-budget-value! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 22, :column 7, :end-line 22, :end-column 29, :arglists (quote ([value]))}, :name devtools.formatters.budgeting/add-over-budget-value!, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 29, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, over-budget-values {:name devtools.formatters.budgeting/over-budget-values, :file "public/js/out/devtools/formatters/budgeting.cljs", :line 20, :column 1, :end-line 20, :end-column 24, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 20, :column 6, :end-line 20, :end-column 24}, :tag #{any js/WeakSet}}, has-any-object-reference? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 47, :column 7, :end-line 47, :end-column 32, :arglists (quote ([json-ml]))}, :name devtools.formatters.budgeting/has-any-object-reference?, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 32, :method-params ([json-ml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([json-ml]))}, distribute-budget! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 60, :column 7, :end-line 60, :end-column 25, :arglists (quote ([json-ml depth-budget]))}, :name devtools.formatters.budgeting/distribute-budget!, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 25, :method-params ([json-ml depth-budget]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([json-ml depth-budget]))}, has-over-budget-value? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 32, :column 7, :end-line 32, :end-column 29, :arglists (quote ([value]))}, :name devtools.formatters.budgeting/has-over-budget-value?, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 29, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, delete-over-budget-value! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 27, :column 7, :end-line 27, :end-column 32, :arglists (quote ([value]))}, :name devtools.formatters.budgeting/delete-over-budget-value!, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 32, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, header-expander-depth-cost {:name devtools.formatters.budgeting/header-expander-depth-cost, :file "public/js/out/devtools/formatters/budgeting.cljs", :line 15, :column 1, :end-line 15, :end-column 32, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 15, :column 6, :end-line 15, :end-column 32}, :tag number}, object-reference? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 39, :column 7, :end-line 39, :end-column 24, :arglists (quote ([json-ml]))}, :name devtools.formatters.budgeting/object-reference?, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 24, :method-params ([json-ml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([json-ml]))}, alter-json-ml-to-fit-in-remaining-budget! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/budgeting.cljs", :line 77, :column 7, :end-line 77, :end-column 48, :arglists (quote ([value json-ml]))}, :name devtools.formatters.budgeting/alter-json-ml-to-fit-in-remaining-budget!, :variadic false, :file "public/js/out/devtools/formatters/budgeting.cljs", :end-column 48, :method-params ([value json-ml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value json-ml]))}}, :cljs.spec/registry-ref [], :require-macros {devtools.oops devtools.oops, devtools.formatters.markup devtools.formatters.markup}, :cljs.analyzer/constants {:seen #{:initial-hierarchy-depth-budget}, :order [:initial-hierarchy-depth-budget]}, :doc nil}