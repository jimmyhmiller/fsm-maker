{:rename-macros {}, :renames {}, :use-macros {safe-call devtools.oops}, :excludes #{}, :name devtools.formatters.core, :imports nil, :requires {devtools.formatters.helpers devtools.formatters.helpers, devtools.formatters.markup devtools.formatters.markup, devtools.formatters.templating devtools.formatters.templating, devtools.formatters.state devtools.formatters.state, devtools.reporter devtools.reporter, devtools.protocols devtools.protocols, devtools.formatters.budgeting devtools.formatters.budgeting, devtools.format devtools.format, reporter devtools.reporter, devtools.prefs devtools.prefs}, :cljs.spec/speced-vars [], :uses {prevent-recursion? devtools.formatters.state, <surrogate-header> devtools.formatters.markup, was-over-budget?! devtools.formatters.budgeting, IDevtoolsFormat devtools.format, get-surrogate-body devtools.formatters.templating, <header> devtools.formatters.markup, pref devtools.prefs, <surrogate-body> devtools.formatters.markup, render-markup devtools.formatters.templating, update-current-state! devtools.formatters.state, IFormat devtools.protocols, *current-state* devtools.formatters.state, surrogate? devtools.formatters.templating, get-default-state devtools.formatters.state, reset-depth-limits devtools.formatters.state, alter-json-ml-to-fit-in-remaining-budget! devtools.formatters.budgeting, cljs-value? devtools.formatters.helpers}, :defs {body {:name devtools.formatters.core/body, :file "public/js/out/devtools/formatters/core.cljs", :line 57, :column 1, :end-line 57, :end-column 10, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 57, :column 6, :end-line 57, :end-column 10}, :tag any}, body-api-call {:name devtools.formatters.core/body-api-call, :file "public/js/out/devtools/formatters/core.cljs", :line 85, :column 1, :end-line 85, :end-column 19, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 85, :column 6, :end-line 85, :end-column 19}, :tag any}, want-value? {:name devtools.formatters.core/want-value?, :file "public/js/out/devtools/formatters/core.cljs", :line 54, :column 1, :end-line 54, :end-column 17, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 54, :column 6, :end-line 54, :end-column 17}, :tag any}, has-body* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 28, :column 7, :end-line 28, :end-column 16, :arglists (quote ([value]))}, :name devtools.formatters.core/has-body*, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 16, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, body* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 39, :column 7, :end-line 39, :end-column 12, :arglists (quote ([value]))}, :name devtools.formatters.core/body*, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, wrap-with-exception-guard {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 61, :column 7, :end-line 61, :end-column 32, :arglists (quote ([f]))}, :name devtools.formatters.core/wrap-with-exception-guard, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 32, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, header {:name devtools.formatters.core/header, :file "public/js/out/devtools/formatters/core.cljs", :line 55, :column 1, :end-line 55, :end-column 12, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 55, :column 6, :end-line 55, :end-column 12}, :tag any}, want-value?* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 16, :column 7, :end-line 16, :end-column 19, :arglists (quote ([value]))}, :name devtools.formatters.core/want-value?*, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 19, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, header* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 20, :column 7, :end-line 20, :end-column 14, :arglists (quote ([value]))}, :name devtools.formatters.core/header*, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 14, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, has-body-api-call {:name devtools.formatters.core/has-body-api-call, :file "public/js/out/devtools/formatters/core.cljs", :line 84, :column 1, :end-line 84, :end-column 23, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 84, :column 6, :end-line 84, :end-column 23}, :tag any}, build-api-call {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 69, :column 7, :end-line 69, :end-column 21, :arglists (quote ([raw-fn pre-handler-key post-handler-key]))}, :name devtools.formatters.core/build-api-call, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 21, :method-params ([raw-fn pre-handler-key post-handler-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 3, :fn-var true, :arglists (quote ([raw-fn pre-handler-key post-handler-key]))}, header-api-call {:name devtools.formatters.core/header-api-call, :file "public/js/out/devtools/formatters/core.cljs", :line 83, :column 1, :end-line 83, :end-column 21, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 83, :column 6, :end-line 83, :end-column 21}, :tag any}, has-body {:name devtools.formatters.core/has-body, :file "public/js/out/devtools/formatters/core.cljs", :line 56, :column 1, :end-line 56, :end-column 14, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 56, :column 6, :end-line 56, :end-column 14}, :tag any}, config-wrapper {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/core.cljs", :line 49, :column 7, :end-line 49, :end-column 21, :arglists (quote ([raw-fn]))}, :name devtools.formatters.core/config-wrapper, :variadic false, :file "public/js/out/devtools/formatters/core.cljs", :end-column 21, :method-params ([raw-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([raw-fn]))}}, :cljs.spec/registry-ref [], :require-macros {devtools.oops devtools.oops, devtools.prefs devtools.prefs, devtools.formatters.markup devtools.formatters.markup}, :cljs.analyzer/constants {:seen #{:body-pre-handler :else :has-body-pre-handler :header-post-handler :header-pre-handler :body-post-handler :has-body-post-handler}, :order [:else :header-pre-handler :header-post-handler :has-body-pre-handler :has-body-post-handler :body-pre-handler :body-post-handler]}, :doc nil}