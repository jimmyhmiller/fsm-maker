{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {safe-call devtools.oops}, :excludes #{}, :name devtools.formatters.printing, :imports nil, :requires {devtools.prefs devtools.prefs, devtools.format devtools.format, devtools.protocols devtools.protocols, devtools.formatters.state devtools.formatters.state, devtools.formatters.helpers devtools.formatters.helpers}, :cljs.spec/speced-vars [], :uses {IGroup devtools.protocols, expandable? devtools.formatters.helpers, ITemplate devtools.protocols, IDevtoolsFormat devtools.format, get-managed-print-level devtools.formatters.state, get-current-state devtools.formatters.state, ISurrogate devtools.protocols, should-render? devtools.formatters.helpers, set-managed-print-level devtools.formatters.state, directly-printable? devtools.formatters.helpers, pref devtools.prefs, push-object-to-current-history! devtools.formatters.state, update-current-state! devtools.formatters.state, abbreviated? devtools.formatters.helpers, IFormat devtools.protocols, *current-state* devtools.formatters.state, cljs-value? devtools.formatters.helpers, is-circular? devtools.formatters.state}, :defs {->TemplateWriter {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 31, :column 10, :end-line 31, :end-column 24, :protocols #{cljs.core/IWriter devtools.formatters.printing/Object}, :skip-protocol-flag #{cljs.core/IWriter}, :factory :positional, :arglists (quote ([group markup-db]))}, :protocols #{cljs.core/IWriter devtools.formatters.printing/Object}, :name devtools.formatters.printing/->TemplateWriter, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 24, :method-params ([group markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([group markup-db])), :skip-protocol-flag #{cljs.core/IWriter}}, alt-printer-impl {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 112, :column 7, :end-line 112, :end-column 23, :arglists (quote ([obj writer opts]))}, :name devtools.formatters.printing/alt-printer-impl, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 23, :method-params ([obj writer opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 3, :fn-var true, :arglists (quote ([obj writer opts]))}, markup? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 13, :column 7, :end-line 13, :end-column 14, :arglists (quote ([value]))}, :name devtools.formatters.printing/markup?, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 14, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, wrap-group-in-meta-if-needed {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 62, :column 7, :end-line 62, :end-column 35, :arglists (quote ([group value markup-db]))}, :name devtools.formatters.printing/wrap-group-in-meta-if-needed, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 35, :method-params ([group value markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 3, :fn-var true, :arglists (quote ([group value markup-db]))}, mark-as-markup {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 16, :column 7, :end-line 16, :end-column 21, :arglists (quote ([value]))}, :name devtools.formatters.printing/mark-as-markup, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 21, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, detect-edge-case-and-patch-it {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 78, :column 7, :end-line 78, :end-column 36, :arglists (quote ([group obj markup-db]))}, :name devtools.formatters.printing/detect-edge-case-and-patch-it, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 36, :method-params ([group obj markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 3, :fn-var true, :arglists (quote ([group obj markup-db]))}, wrap-group-in-reference-if-needed {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 48, :column 7, :end-line 48, :end-column 40, :arglists (quote ([group obj markup-db]))}, :name devtools.formatters.printing/wrap-group-in-reference-if-needed, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 40, :method-params ([group obj markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 3, :fn-var true, :arglists (quote ([group obj markup-db]))}, managed-print-via-writer {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 139, :column 7, :end-line 139, :end-column 31, :arglists (quote ([value tag markup-db]))}, :name devtools.formatters.printing/managed-print-via-writer, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 31, :method-params ([value tag markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value tag markup-db]))}, already-reference? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 44, :column 7, :end-line 44, :end-column 25, :arglists (quote ([group]))}, :name devtools.formatters.printing/already-reference?, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 25, :method-params ([group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group]))}, TemplateWriter {:num-fields 2, :protocols #{cljs.core/IWriter devtools.formatters.printing/Object}, :name devtools.formatters.printing/TemplateWriter, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 24, :type true, :column 10, :line 31, :record false, :end-line 31, :skip-protocol-flag #{cljs.core/IWriter}}, wrap-value-as-reference-if-needed {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 24, :column 7, :end-line 24, :end-column 40, :arglists (quote ([markup-db value]))}, :name devtools.formatters.printing/wrap-value-as-reference-if-needed, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 40, :method-params ([markup-db value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([markup-db value]))}, managed-print-via-protocol {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 143, :column 7, :end-line 143, :end-column 33, :arglists (quote ([value tag markup-db]))}, :name devtools.formatters.printing/managed-print-via-protocol, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 33, :method-params ([value tag markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value tag markup-db]))}, alt-printer-job {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 100, :column 7, :end-line 100, :end-column 22, :arglists (quote ([obj writer opts]))}, :name devtools.formatters.printing/alt-printer-job, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 22, :method-params ([obj writer opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 3, :fn-var true, :arglists (quote ([obj writer opts]))}, make-template-writer {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 39, :column 7, :end-line 39, :end-column 27, :arglists (quote ([markup-db]))}, :name devtools.formatters.printing/make-template-writer, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 27, :method-params ([markup-db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup-db]))}, wrap-group-in-circular-warning-if-needed {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 57, :column 7, :end-line 57, :end-column 47, :arglists (quote ([group markup-db circular?]))}, :name devtools.formatters.printing/wrap-group-in-circular-warning-if-needed, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 47, :method-params ([group markup-db circular?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 3, :fn-var true, :arglists (quote ([group markup-db circular?]))}, managed-print {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 123, :column 7, :end-line 123, :end-column 20, :arglists (quote ([tag markup-db printer]))}, :name devtools.formatters.printing/managed-print, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 20, :method-params ([tag markup-db printer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tag markup-db printer]))}, build-markup {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([markup-db fn-key & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(markup-db fn-key args)], :arglists ([markup-db fn-key & args]), :arglists-meta (nil)}}, :name devtools.formatters.printing/build-markup, :variadic true, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(markup-db fn-key args)], :arglists ([markup-db fn-key & args]), :arglists-meta (nil)}, :method-params [(markup-db fn-key args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists ([markup-db fn-key & args])}, post-process-printed-output {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/printing.cljs", :line 91, :column 7, :end-line 91, :end-column 34, :arglists (quote ([output-group obj markup-db circular?]))}, :name devtools.formatters.printing/post-process-printed-output, :variadic false, :file "public/js/out/devtools/formatters/printing.cljs", :end-column 34, :method-params ([output-group obj markup-db circular?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 4, :fn-var true, :arglists (quote ([output-group obj markup-db circular?]))}}, :cljs.spec/registry-ref [], :require-macros {devtools.oops devtools.oops, devtools.prefs devtools.prefs}, :cljs.analyzer/constants {:seen #{:render-metas :else :max-header-elements group :fallback-impl :meta-wrapper :raw-surrogate :native-reference :markup-db :reference-surrogate :more-marker :reference :print-length markup-db :circular-reference :expandable :target :mutable :alt-impl :atomic :devtools.formatters.printing/markup}, :order [:devtools.formatters.printing/markup :reference-surrogate group :mutable markup-db :expandable :raw-surrogate :target :reference :circular-reference :render-metas :meta-wrapper :native-reference :else :markup-db :atomic :fallback-impl :print-length :alt-impl :more-marker :max-header-elements]}, :doc nil}