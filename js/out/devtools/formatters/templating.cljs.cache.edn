{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {safe-call devtools.oops, oset devtools.oops, oget devtools.oops, prewalk clojure.walk, ocall devtools.oops, oapply devtools.oops}, :excludes #{}, :name devtools.formatters.templating, :imports nil, :requires {clojure.walk clojure.walk, devtools.util devtools.util, devtools.protocols devtools.protocols, devtools.formatters.helpers devtools.formatters.helpers, devtools.formatters.state devtools.formatters.state, string clojure.string, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses {prevent-recursion? devtools.formatters.state, IGroup devtools.protocols, ITemplate devtools.protocols, get-current-state devtools.formatters.state, ISurrogate devtools.protocols, pref devtools.formatters.helpers, prewalk clojure.walk, IFormat devtools.protocols, pprint-str devtools.util, cljs-value? devtools.formatters.helpers}, :defs {make-template {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 48, :column 7, :end-line 48, :end-column 20, :arglists (quote ([tag style & children])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(tag style children)], :arglists ([tag style & children]), :arglists-meta (nil)}}, :name devtools.formatters.templating/make-template, :variadic true, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(tag style children)], :arglists ([tag style & children]), :arglists-meta (nil)}, :method-params [(tag style children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists ([tag style & children])}, mark-as-surrogate! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 26, :column 7, :end-line 26, :end-column 25, :arglists (quote ([value]))}, :name devtools.formatters.templating/mark-as-surrogate!, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 25, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, concat-templates! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 63, :column 7, :end-line 63, :end-column 24, :arglists (quote ([template & templates])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template templates)], :arglists ([template & templates]), :arglists-meta (nil)}}, :name devtools.formatters.templating/concat-templates!, :variadic true, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template templates)], :arglists ([template & templates]), :arglists-meta (nil)}, :method-params [(template templates)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists ([template & templates])}, make-reference {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 98, :column 7, :end-line 98, :end-column 21, :arglists (quote ([object & [state-override-fn]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(object [state-override-fn])], :arglists ([object & [state-override-fn]]), :arglists-meta (nil)}}, :name devtools.formatters.templating/make-reference, :variadic true, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(object [state-override-fn])], :arglists ([object & [state-override-fn]]), :arglists-meta (nil)}, :method-params [(object [state-override-fn])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists ([object & [state-override-fn]])}, make-surrogate {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 69, :column 7, :end-line 69, :end-column 21, :arglists (quote ([object] [object header] [object header body] [object header body start-index])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([object] [object header] [object header body] [object header body start-index]), :arglists ([object] [object header] [object header body] [object header body start-index]), :arglists-meta (nil nil nil nil)}}, :name devtools.formatters.templating/make-surrogate, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([object] [object header] [object header body] [object header body start-index]), :arglists ([object] [object header] [object header body] [object header body start-index]), :arglists-meta (nil nil nil nil)}, :method-params ([object] [object header] [object header body] [object header body start-index]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 4, :fn-var true, :arglists ([object] [object header] [object header body] [object header body start-index])}, pprint-render-path {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 145, :column 7, :end-line 145, :end-column 25, :arglists (quote ([path]))}, :name devtools.formatters.templating/pprint-render-path, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 25, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, get-surrogate-body {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 90, :column 7, :end-line 90, :end-column 25, :arglists (quote ([surrogate]))}, :name devtools.formatters.templating/get-surrogate-body, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 25, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, reference? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([value]))}, :name devtools.formatters.templating/reference?, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, replace-fns-with-markers {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 128, :column 7, :end-line 128, :end-column 31, :arglists (quote ([stack]))}, :name devtools.formatters.templating/replace-fns-with-markers, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 31, :method-params ([stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stack]))}, *current-render-path* {:name devtools.formatters.templating/*current-render-path*, :file "public/js/out/devtools/formatters/templating.cljs", :line 119, :column 1, :end-line 119, :end-column 37, :dynamic true, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 119, :column 16, :end-line 119, :end-column 37, :dynamic true}, :tag cljs.core/IVector}, render-subtree {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 172, :column 7, :end-line 172, :end-column 21, :arglists (quote ([tag children]))}, :name devtools.formatters.templating/render-subtree, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :method-params ([tag children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag children]))}, emptyish? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 167, :column 7, :end-line 167, :end-column 16, :arglists (quote ([v]))}, :name devtools.formatters.templating/emptyish?, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 16, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, assert-failed-markup-rendering {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 193, :column 17, :end-line 193, :end-column 47, :dynamic true, :arglists (quote ([initial-value value]))}, :name devtools.formatters.templating/assert-failed-markup-rendering, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 47, :method-params ([initial-value value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([initial-value value]))}, pprint-render-calls {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 135, :column 7, :end-line 135, :end-column 26, :arglists (quote ([stack]))}, :name devtools.formatters.templating/pprint-render-calls, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 26, :method-params ([stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stack]))}, render-markup {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 208, :column 7, :end-line 208, :end-column 20, :arglists (quote ([value]))}, :name devtools.formatters.templating/render-markup, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 20, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, assert-markup-error {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 148, :column 7, :end-line 148, :end-column 26, :arglists (quote ([msg]))}, :name devtools.formatters.templating/assert-markup-error, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 26, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, surrogate-markup? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 154, :column 7, :end-line 154, :end-column 24, :arglists (quote ([markup]))}, :name devtools.formatters.templating/surrogate-markup?, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 24, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, render-markup* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 198, :column 7, :end-line 198, :end-column 21, :arglists (quote ([initial-value value]))}, :name devtools.formatters.templating/render-markup*, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :method-params ([initial-value value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists (quote ([initial-value value]))}, add-stack-separators {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 125, :column 7, :end-line 125, :end-column 27, :arglists (quote ([stack]))}, :name devtools.formatters.templating/add-stack-separators, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 27, :method-params ([stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stack]))}, make-group {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([& items])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}}, :name devtools.formatters.templating/make-group, :variadic true, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}, :method-params [(items)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists ([& items])}, get-surrogate-header {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 86, :column 7, :end-line 86, :end-column 27, :arglists (quote ([surrogate]))}, :name devtools.formatters.templating/get-surrogate-header, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 27, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, render-json-ml* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 176, :column 7, :end-line 176, :end-column 22, :arglists (quote ([markup]))}, :name devtools.formatters.templating/render-json-ml*, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 22, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, surrogate? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([value]))}, :name devtools.formatters.templating/surrogate?, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, render-json-ml {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 186, :column 7, :end-line 186, :end-column 21, :arglists (quote ([markup]))}, :name devtools.formatters.templating/render-json-ml, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, *current-render-stack* {:name devtools.formatters.templating/*current-render-stack*, :file "public/js/out/devtools/formatters/templating.cljs", :line 118, :column 1, :end-line 118, :end-column 38, :dynamic true, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 118, :column 16, :end-line 118, :end-column 38, :dynamic true}, :tag cljs.core/IVector}, mark-as-group! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 12, :column 7, :end-line 12, :end-column 21, :arglists (quote ([value]))}, :name devtools.formatters.templating/mark-as-group!, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, get-surrogate-target {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 82, :column 7, :end-line 82, :end-column 27, :arglists (quote ([surrogate]))}, :name devtools.formatters.templating/get-surrogate-target, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 27, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, get-surrogate-start-index {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 94, :column 7, :end-line 94, :end-column 32, :arglists (quote ([surrogate]))}, :name devtools.formatters.templating/get-surrogate-start-index, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 32, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, mark-as-template! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 19, :column 7, :end-line 19, :end-column 24, :arglists (quote ([value]))}, :name devtools.formatters.templating/mark-as-template!, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 24, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, pprint-render-stack {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 138, :column 7, :end-line 138, :end-column 26, :arglists (quote ([stack]))}, :name devtools.formatters.templating/pprint-render-stack, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 26, :method-params ([stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stack]))}, template? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([value]))}, :name devtools.formatters.templating/template?, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 16, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, render-special {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 157, :column 7, :end-line 157, :end-column 21, :arglists (quote ([name args]))}, :name devtools.formatters.templating/render-special, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 21, :method-params ([name args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name args]))}, print-preview {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 121, :column 7, :end-line 121, :end-column 20, :arglists (quote ([markup]))}, :name devtools.formatters.templating/print-preview, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 20, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, group? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 16, :column 7, :end-line 16, :end-column 13, :arglists (quote ([value]))}, :name devtools.formatters.templating/group?, :variadic false, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 13, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, extend-template! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/templating.cljs", :line 66, :column 7, :end-line 66, :end-column 23, :arglists (quote ([template & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template args)], :arglists ([template & args]), :arglists-meta (nil)}}, :name devtools.formatters.templating/extend-template!, :variadic true, :file "public/js/out/devtools/formatters/templating.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(template args)], :arglists ([template & args]), :arglists-meta (nil)}, :method-params [(template args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists ([template & args])}}, :cljs.spec/registry-ref [], :require-macros {devtools.oops devtools.oops}, :cljs.analyzer/constants {:seen #{:nil-style :else :nil-label :span}, :order [:span :nil-style :nil-label :else]}, :doc nil}