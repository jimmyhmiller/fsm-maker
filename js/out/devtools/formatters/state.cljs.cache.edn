{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name devtools.formatters.state, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {prevent-recursion? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 46, :column 13, :end-line 46, :end-column 31, :tag bool, :arglists (quote ([]))}, :name devtools.formatters.state/prevent-recursion?, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :ret-tag bool, :end-line 46, :max-fixed-arity 0, :tag bool, :fn-var true, :arglists (quote ([]))}, get-managed-print-level {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 54, :column 7, :end-line 54, :end-column 30, :arglists (quote ([]))}, :name devtools.formatters.state/get-managed-print-level, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-current-state {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 26, :column 7, :end-line 26, :end-column 24, :arglists (quote ([]))}, :name devtools.formatters.state/get-current-state, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-current-history {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 39, :column 7, :end-line 39, :end-column 26, :arglists (quote ([]))}, :name devtools.formatters.state/get-current-history, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-managed-print-level {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 57, :column 7, :end-line 57, :end-column 30, :arglists (quote ([state val]))}, :name devtools.formatters.state/set-managed-print-level, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 30, :method-params ([state val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state val]))}, push-object-to-current-history! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 36, :column 7, :end-line 36, :end-column 38, :arglists (quote ([object]))}, :name devtools.formatters.state/push-object-to-current-history!, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 38, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, update-current-state! {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 30, :column 7, :end-line 30, :end-column 28, :arglists (quote ([f & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name devtools.formatters.state/update-current-state!, :variadic true, :file "public/js/out/devtools/formatters/state.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists ([f & args])}, get-depth-budget {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 62, :column 7, :end-line 62, :end-column 23, :arglists (quote ([]))}, :name devtools.formatters.state/get-depth-budget, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *current-state* {:name devtools.formatters.state/*current-state*, :file "public/js/out/devtools/formatters/state.cljs", :line 18, :column 1, :end-line 18, :end-column 31, :dynamic true, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 18, :column 16, :end-line 18, :end-column 31, :dynamic true}, :tag clj-nil}, get-default-state {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 23, :column 7, :end-line 23, :end-column 24, :arglists (quote ([]))}, :name devtools.formatters.state/get-default-state, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, valid-current-state? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 20, :column 7, :end-line 20, :end-column 27, :arglists (quote ([]))}, :name devtools.formatters.state/valid-current-state?, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reset-depth-limits {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 70, :column 7, :end-line 70, :end-column 25, :arglists (quote ([state]))}, :name devtools.formatters.state/reset-depth-limits, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 25, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, set-prevent-recursion {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 49, :column 7, :end-line 49, :end-column 28, :arglists (quote ([state val]))}, :name devtools.formatters.state/set-prevent-recursion, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 28, :method-params ([state val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state val]))}, set-depth-budget {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 65, :column 7, :end-line 65, :end-column 23, :arglists (quote ([state val]))}, :name devtools.formatters.state/set-depth-budget, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 23, :method-params ([state val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state val]))}, is-circular? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/devtools/formatters/state.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([object]))}, :name devtools.formatters.state/is-circular?, :variadic false, :file "public/js/out/devtools/formatters/state.cljs", :end-column 19, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:depth-budget :prevent-recursion :history :managed-print-level}, :order [:history :prevent-recursion :managed-print-level :depth-budget]}, :doc nil}