{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name specviz.util, :imports nil, :requires {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha, string clojure.string, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses nil, :defs {add-line-no {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/specviz/util.cljc", :line 7, :column 7, :end-line 7, :end-column 18, :arglists (quote ([s])), :doc "Add line numbers to strings, for debugging."}, :name specviz.util/add-line-no, :variadic false, :file "public/js/out/specviz/util.cljc", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Add line numbers to strings, for debugging."}, concatv {:name specviz.util/concatv, :file "public/js/out/specviz/util.cljc", :line 15, :column 1, :end-line 15, :end-column 13, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/specviz/util.cljc", :line 15, :column 6, :end-line 15, :end-column 13}, :tag any}, first* {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/specviz/util.cljc", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([x])), :doc "Returns the first item in x, if x is sequential, else x."}, :name specviz.util/first*, :variadic false, :file "public/js/out/specviz/util.cljc", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the first item in x, if x is sequential, else x."}, escape-quotes {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/specviz/util.cljc", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([s]))}, :name specviz.util/escape-quotes, :variadic false, :file "public/js/out/specviz/util.cljc", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, strip-core {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/fsm-maker/public/js/out/specviz/util.cljc", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([s])), :doc "Remove 'clojure.core/' prefix from a string."}, :name specviz.util/strip-core, :variadic false, :file "public/js/out/specviz/util.cljc", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Remove 'clojure.core/' prefix from a string."}}, :cljs.spec/registry-ref [], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :doc "General utilities."}